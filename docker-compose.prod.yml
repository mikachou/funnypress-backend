version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: docker/prod/Dockerfile
    container_name: funnypress-app
    restart: unless-stopped
    working_dir: /var/www/html
    env_file:
      - .env.production
    volumes:
      - app-public:/var/www/html/public
    networks:
      - funnypress

  web:
    image: nginx:alpine
    container_name: funnypress-web
    restart: unless-stopped
    env_file:
      - ./docker/prod/private.env
    ports:
      - "443:443"
    volumes:
      - app-public:/var/www/html/public:ro
      - ./docker/prod/default.conf.template:/etc/nginx/conf.d/default.conf.template
      - ./docker/prod/certs:/etc/nginx/certs
    networks:
      - funnypress
    depends_on:
      - app
    command: >
      /bin/sh -c "envsubst '$$SERVER_NAME' < /etc/nginx/conf.d/default.conf.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  db:
    image: postgres:17
    container_name: funnypress-db
    restart: unless-stopped
    env_file:
      - .env.db.prod
    volumes:
      - funnypress-data:/var/lib/postgresql/data
    networks:
      - funnypress

  funnypress-ws:
    build:
      context: https://github.com/mikachou/funnypress-webservice.git
      dockerfile: Dockerfile.dev
    container_name: funnypress-ws
    restart: unless-stopped
    networks:
      - funnypress
    ports:
      - '8000:8000'

networks:
  funnypress:
    driver: bridge

volumes:
  funnypress-data:
    driver: local
  app-public: